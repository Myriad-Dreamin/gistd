/// This file can generate README.md by `typlite README.typ`

#let forest = green.darken(20%)
#let is-markdown = sys.inputs.at("x-target", default: "pdf") == "md"
#show regex("github.com|codeberg.org"): text.with(forest)
#show "gistd-cn.myriad-dreamin.com": text.with(eastern)
#show regex("any-gistd-cn.myriad-dreamin.com|@(?:any|http)"): text.with(red)
#show link: text.with(blue)
#show link: underline

#set document(title: "Gistd 文档")
#set par(justify: true) if not is-markdown

#let verbatim(body) = {
  show raw.where(lang: "verbatim"): it => html.elem("m1verbatim", attrs: (src: it.text))
  body
}

#if is-markdown {
  verbatim[
    ```verbatim
    <!-- This file is generated by `typlite README.typ` -->
    # Gistd
    ```
  ]
} else {
  align(center, text(size: 28pt)[Gistd])
}

即时分享 存储 在 git 或其他网络服务上的 #link("https://typst.app")[typst] 文档。

= 在 GitHub 上加载文档

假设你有一个 GitHub 链接，例如：

```
https://github.com/typst/templates/blob/main/charged-ieee/template/main.typ
```

将 `github.com` 替换为 `gistd-cn.myriad-dreamin.com`:

```
https://gistd-cn.myriad-dreamin.com/typst/templates/blob/main/charged-ieee/template/main.typ
```

示例文档：

- https://gistd-cn.myriad-dreamin.com/johanvx/typst-undergradmath/blob/main/undergradmath.typ
- https://gistd-cn.myriad-dreamin.com/Jollywatt/typst-fletcher/blob/main/docs/manual.typ
- https://gistd-cn.myriad-dreamin.com/typst/templates/blob/main/charged-ieee/template/main.typ

== 显示参数

这些 URL 参数可以改变 gistd 的行为。

- `g-page`: 要显示的页面编号。默认是 `1`。仅在幻灯片模式下可用。
- `g-mode`: 显示模式。
  - `doc`: 显示为普通文档。
  - `slide`: 显示为幻灯片。

== 幻灯片模式

使用上面提到的 `g-mode=slide` 以幻灯片模式显示文档：

示例文档：

- #link(
    "https://gistd-cn.myriad-dreamin.com/touying-typ/touying/blob/main/examples/simple.typ?g-mode=slide",
  )[A simple touying side.]

= 从任意链接加载文档

假设你有一个任意链接，例如：

```
https://github.com/typst/templates/blob/main/charged-ieee/template/main.typ
```

将 `any-gistd-cn.myriad-dreamin.com` 放在链接前面：

```
https://any-gistd-cn.myriad-dreamin.com/github.com/typst/templates/blob/main/charged-ieee/template/main.typ
```

`any-gistd-cn.myriad-dreamin.com` 是 `gistd-cn.myriad-dreamin.com/@any` 的别名。

如果一个域名 (主机) 被特别识别，gistd 将使用相应的方法来服务文档。
- `github.com`: git 协议。
- `codeberg.org`: git 协议。
- `localhost` 和其他: 如果主机是 `localhost` 则使用 HTTP 协议，否则使用 https 协议。注意: gistd 不会加载指定域名上的其他文件，即 typst 文档无法加载相对于域名的其他资源。

示例文档：

- https://any-gistd-cn.myriad-dreamin.com/github.com/Myriad-Dreamin/gistd/raw/main/README.typ
- https://gistd-cn.myriad-dreamin.com/@any/github.com/Myriad-Dreamin/gistd/raw/main/README.typ

= 不使用 cors 代理加载文档

默认情况下，gistd 使用一个受信任的 cors 代理 (`https://underleaf.mgt.workers.dev`) 来加载文档。这是因为 GitHub 和 Forgejo 不允许 gistd 加载文档。请参阅 #link("https://isomorphic-git.org/docs/en/quickstart")[isomorphic-git: Quickstart] 了解更多详情。

然而，你可能想要加载一个没有 cors 代理的文档。你可以通过在查询字符串中添加 `g-cors=false` 来实现。

例如，要加载 `http://localhost:11449/main.typ` 上的文档：

- https://gistd-cn.myriad-dreamin.com/@http/localhost:11449/main.typ?g-cors=false

= 使用 HTTP 协议加载文档

`@any` 从 URL 推断协议，而你可以使用 `@http` 强制使用 HTTP 协议。例如，要加载 `http://localhost:11449/main.typ` 上的文档：

- https://gistd-cn.myriad-dreamin.com/@http/localhost:11449/main.typ?g-cors=false


#if is-markdown [
  == 开发指南

  安装依赖：

  ```
  pnpm install
  ```

  本地开发：

  ```
  pnpm dev
  ```

  构建：

  ```
  pnpm build
  ```
]
